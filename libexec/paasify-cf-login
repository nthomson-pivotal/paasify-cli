#!/bin/bash
# Usage: paasify cf-login
# Summary: Login the local CF CLI to the PAS installed
# Help: Logs in the local CF CLI to the PAS installed by paasify.
#
#    -n    the name of the environment
#  

source $_PAASIFY_ROOT/share/init-env

while getopts ":n:" opt; do
  case ${opt} in
    n )
      name=$OPTARG
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      exit 1
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

if [ -z "$name" ]; then
  echo "Error: An environment name must be supplied (-n)"
  exit 1
fi

env_dir=$ENVS_DIR/$name

if [ ! -d "$env_dir" ]; then
  echo "Environment '$name' does not exist"
  exit
fi

state_file=$env_dir/terraform.tfstate

if [ -f $env_dir/remote.tf ]; then
  state_json=$(cd $env_dir && terraform state pull)
elif [ -f "$state_file" ]; then
  state_json=$(cat $state_file)
else
  echo "Terraform state does not exist, have you run 'paasify apply -n $name' ?"
  exit 1
fi

source $_PAASIFY_ROOT/share/om-env

cf_api_endpoint=$(echo $state_json | jq -r '.modules[0].outputs.cf_api_endpoint.value')
cf_admin_password=$(om credentials -p cf -c .uaa.admin_credentials -t json | jq -r '.password')

if [ -z "$cf_admin_password" ]; then
  echo "Error: Could not get CF admin password from OpsManager, did installation complete successfully?"
  exit 1
fi

echo "Authenticating to CF with username 'admin' and password '$cf_admin_password'"
echo ""

cf login -a $cf_api_endpoint -u admin -p $cf_admin_password -o system -s system